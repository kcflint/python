# Создайте собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Необходимо
# запрашивать у пользователя данные и заполнять список только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду “stop”. При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и
# строки. При вводе пользователем очередного элемента необходимо реализовать проверку
# типа элемента и вносить его в список, только если введено число. Класс-исключение должен
# не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.

class OwnError(Exception):
    pass

num_lst = []

def num_line():
    try:
        type(int(line)) == int
    except ValueError:
        raise OwnError
    return int(line)

while True:
    line = input("Введите данные. Для остановки введите 'stop' ")
    if line == "stop":
        break
    try:
        num_lst.append(num_line())
    except OwnError:
        print("Ввели не число")

print(num_lst)